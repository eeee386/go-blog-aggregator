(undo-tree-save-format-version . 1)
"8c891e17a8a2aa89e457295d93c93098535b49bc"
[nil nil nil nil (25901 3210 701143 569000) 0 nil]
([nil nil ((1 . 13) (t 25901 3210 707239 725000)) nil (25901 3404 312806 716000) 0 nil])
([nil nil ((13 . 19)) nil (25901 3404 312806 286000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -18) (undo-tree-id114 . -1) 19) nil (25901 3404 312805 204000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -19) (19 . 20) (#(")" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -19) (19 . 20) (18 . 20)) nil (25901 3404 312803 691000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . -18) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . 1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#(")" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . -19) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 20) nil (25901 3404 312801 978000) 0 nil])
([nil nil ((18 . 23)) nil (25901 3404 312794 754000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -22) (undo-tree-id102 . -1) 23) nil (25901 3404 312793 742000) 0 nil])
([nil nil ((22 . 29)) nil (25901 3404 312791 528000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -24) (undo-tree-id97 . -1) (#("l" 0 1 (fontified t)) . -25) (undo-tree-id98 . -1) (#("u" 0 1 (fontified t)) . -26) (undo-tree-id99 . -1) (#("m" 0 1 (fontified t)) . -27) (undo-tree-id100 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -28) (undo-tree-id101 . -1) 29) nil (25901 3404 312790 135000) 0 nil])
([nil nil ((24 . 30)) nil (25901 3404 312781 669000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -22) (undo-tree-id96 . -1) 23) nil (25901 3404 312780 577000) 0 nil])
([nil nil ((22 . 23)) nil (25901 3404 312778 874000) 0 nil])
([nil nil ((30 . 33)) nil (25901 3404 312777 822000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -30) (undo-tree-id93 . -1) (#("e" 0 1 (fontified t)) . -31) (undo-tree-id94 . -1) (#("w" 0 1 (fontified t face font-lock-keyword-face)) . -32) (undo-tree-id95 . -1) 33) nil (25901 3404 312775 989000) 0 nil])
([nil nil ((30 . 37)) nil (25901 3404 312772 682000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -45) (45 . 46) (#(")" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -45) (45 . 46) (37 . 46)) nil (25901 3404 312771 540000) 0 nil])
([nil nil ((45 . 47)) nil (25901 3404 312769 967000) 0 nil])
([nil nil ((48 . 49)) nil (25901 3404 312768 895000) 0 nil])
([nil nil ((49 . 64)) nil (25901 3404 312767 913000) 0 nil])
([nil nil ((64 . 75)) nil (25901 3404 312766 681000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -74) (undo-tree-id92 . -1) 75) nil (25901 3404 312766 150000) 0 nil])
([nil nil ((74 . 75)) nil (25901 3404 312764 767000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -73) (undo-tree-id90 . -1) (#("A" 0 1 (fontified t)) . -74) (undo-tree-id91 . -1) 75) nil (25901 3404 312763 665000) 0 nil])
([nil nil ((73 . 77)) nil (25901 3404 312761 642000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t)) . -72) (undo-tree-id88 . -1) (#("A" 0 1 (fontified t)) . -73) (undo-tree-id89 . -1) 74) nil (25901 3404 312760 990000) 0 nil])
([nil nil ((72 . 74)) nil (25901 3404 312706 468000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -72) (undo-tree-id86 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:attribute)) . -73) (undo-tree-id87 . -1) 74) nil (25901 3404 312705 736000) 0 nil])
([nil nil ((72 . 74)) nil (25901 3404 312702 250000) 0 nil])
([nil nil ((76 . 77)) nil (25901 3404 312701 358000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -84) (84 . 85) (#(")" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -84) (84 . 85) (77 . 85)) nil (25901 3404 312700 817000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -85) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 86) nil (25901 3404 312699 254000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -77) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("n" 0 1 (fontified t)) . -78) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("c" 0 1 (fontified t)) . -79) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("o" 0 1 (fontified t)) . -80) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("d" 0 1 (fontified t)) . -81) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("e" 0 1 (fontified t)) . -82) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("(" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . -83) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . 1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(")" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . -84) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . 1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 85) nil (25901 3404 312695 116000) 0 nil])
([nil nil ((nil rear-nonsticky nil 120 . 121) (nil fontified nil 77 . 121) (77 . 121) 76) nil (25901 3404 312619 754000) 0 nil])
([nil nil ((121 . 122)) nil (25901 3404 312613 883000) 0 nil])
([nil nil ((2 . 4) (#("  " 0 2 (fontified nil)) . 1) (1 . 3) (1 . 2) (t 25901 3404 319015 104000)) nil (25901 3435 626586 512000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#(" " 0 1 (fontified t)) . -3) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) 4) nil (25901 3435 626582 444000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -14) (1 . 15) (t 25901 3435 634142 116000)) nil (25901 3498 539511 917000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1)) nil (25901 3498 539510 435000) 0 nil])
([nil nil ((136 . 138) (#("  " 0 2 (fontified nil)) . 135) (135 . 137) (135 . 136)) nil (25901 3498 539509 563000) 0 nil])
([nil nil ((138 . 140)) nil (25901 3498 539508 601000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -136) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#(" " 0 1 (fontified t)) . -137) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 138) nil (25901 3498 539507 559000) 0 nil])
([nil nil ((138 . 141)) nil (25901 3498 539503 492000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face tree-sitter-hl-face:comment)) . -140) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 141) nil (25901 3498 539502 740000) 0 nil])
([nil nil ((140 . 150)) nil (25901 3498 539500 276000) 0 nil])
([nil nil ((151 . 153) (#("  " 0 2 (fontified nil face tree-sitter-hl-face:comment)) . 150) (150 . 152) (150 . 151)) nil (25901 3498 539499 83000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -151) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t)) . -152) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 153) nil (25901 3498 539497 540000) 0 nil])
([nil nil ((151 . 157)) nil (25901 3498 539494 294000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -152) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("t" 0 1 (fontified t)) . -153) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("e" 0 1 (fontified t)) . -154) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -155) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t)) . -156) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 157) nil (25901 3498 539492 601000) 0 nil])
([nil nil ((152 . 157)) nil (25901 3498 539393 94000) 0 nil])
([nil nil ((157 . 178)) nil (25901 3498 539392 202000) 0 nil])
([nil nil ((178 . 184)) nil (25901 3498 539391 70000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -183) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 184) nil (25901 3498 539389 898000) 0 nil])
([nil nil ((183 . 186)) nil (25901 3498 539386 832000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -185) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 186) nil (25901 3498 539385 580000) 0 nil])
([nil nil ((185 . 187)) nil (25901 3498 539371 733000) 0 nil])
([nil nil ((187 . 188)) nil (25901 3498 539365 732000) 0 nil])
([nil nil ((187 . 188) (t 25901 3498 546398 430000)) nil (25901 3529 297987 11000) 0 nil])
([nil nil ((134 . 135)) nil (25901 3529 297980 118000) 0 nil])
([nil nil ((137 . 139) (#("  " 0 2 (fontified nil)) . 136) (136 . 138) (136 . 137) (t 25901 3529 305524 241000)) nil (25901 3710 201163 814000) 0 nil])
([nil nil ((136 . 157)) nil (25901 3710 201163 22000) 0 nil])
([nil nil ((157 . 171)) nil (25901 3710 201162 371000) 0 nil])
([nil nil ((171 . 174)) nil (25901 3710 201161 419000) 0 nil])
([nil nil ((#("SET DEFAULT encode(sha256(random()::text::bytea), 'hex')" 0 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t) 4 11 (fontified t face tree-sitter-hl-face:attribute) 11 12 (fontified t) 12 18 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:type)) 18 19 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 19 25 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:type)) 25 26 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 26 32 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:type)) 32 33 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 33 34 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 34 36 (fontified t) 36 40 (fontified t face tree-sitter-hl-face:type\.builtin) 40 42 (fontified t) 42 47 (fontified t face tree-sitter-hl-face:type\.builtin) 47 48 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 48 49 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 49 50 (fontified t) 50 55 (fontified t face (tree-sitter-hl-face:string tree-sitter-hl-face:number)) 55 56 (fontified t rear-nonsticky t face tree-sitter-hl-face:punctuation\.bracket)) . 78) (undo-tree-id212 . -55) (undo-tree-id213 . -12) (undo-tree-id214 . 56) (undo-tree-id215 . -55) (undo-tree-id216 . -53) (undo-tree-id217 . -53) (undo-tree-id218 . -55) (undo-tree-id219 . -55) (undo-tree-id220 . -56) (undo-tree-id221 . -55) (undo-tree-id222 . -12) (undo-tree-id223 . -18) (undo-tree-id224 . -19) (undo-tree-id225 . -25) (undo-tree-id226 . -26) (undo-tree-id227 . -32) (undo-tree-id228 . -36) (undo-tree-id229 . -40) (undo-tree-id230 . -42) (undo-tree-id231 . -47) (undo-tree-id232 . -50) (undo-tree-id233 . -51) (undo-tree-id234 . -54) (undo-tree-id235 . -54) (undo-tree-id236 . -55) (undo-tree-id237 . -56) (undo-tree-id238 . -55) (undo-tree-id239 . 1) (undo-tree-id240 . -56) (undo-tree-id241 . 38) (undo-tree-id242 . -19) (undo-tree-id243 . -55) (undo-tree-id244 . -56) 133) nil (25901 3710 201159 876000) 0 nil])
([nil nil ((nil rear-nonsticky nil 173 . 174) (nil fontified nil 118 . 174) (118 . 174) 117) nil (25901 3710 201140 831000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -77) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 78) nil (25901 3710 201139 508000) 0 nil])
([nil current ((173 . 174)) nil (25901 3710 201100 274000) 0 nil])
nil
